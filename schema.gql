# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddPersonaInput {
  uuid: String!
  persona: CreatePersonaInput!
}

input CardInput {
  name: String!
  description: String!
  avatar: String
  background: String
}

type CardType {
  name: String!
  description: String!
  avatar: String
  background: String
}

input ConnectPersonaInput {
  uuid: String!
  personaUUID: String!
}

input CreatePersonaInput {
  card: CardInput!
  page: PageInput!
}

input CreateSpotInput {
  name: String!
  description: String!
  logo: String
  image: String
  url: String = ""
  details: JSONObject
}

input CreateUserInput {
  uuid: String!
  name: String!
  email: String
  photo: String
}

type Example {
  qrCodeDataUri: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Mutation {
  createSpot(spot: CreateSpotInput!): SpotType!
  updateSpot(uuid: String!, spot: UpdateSpotInput!): SpotType!
  removeSpot(condition: SpotInput!): Float!
  connectPersona(input: ConnectPersonaInput!): PersonaType!
  updatePersona(uuid: String!, persona: UpdatePersonaInput!): PersonaType!
  loginUser(idToken: String!): UserLoginType!
  logoutUser(uid: String!): String!
  createUser(user: CreateUserInput!): UserType!
  updateUser(uuid: String!, user: UpdateUserInput!): UserType!
  removeUser(condition: UserInput!): Float!
  createPersona(persona: CreatePersonaInput!): PersonaType!
  removePersona(payload: RemovePersonaInput!): Float!
  setDefaultPersona(uuid: String!): PersonaType!
  recommendBy(
    recommendedPersonaUuid: String!
    personaUuid: String!
  ): PersonaType!
}

input PageInput {
  content: String!
  avatar: String
  background: String
}

type PageType {
  avatar: String
  background: String
  content: String!
}

input PersonaInput {
  uuid: String!
}

type PersonaType {
  uuid: String!
  card: CardType!
  page: PageType!
  personaUUIDs: [String!]
  qrCodeLink: String!
  networkList: [String!]
}

type Query {
  getExample(id: String!): Example!
  spot(condition: SpotInput!): SpotType
  spots: [SpotType!]
  persona(uuid: String!): PersonaType
  personas: [PersonaType!]
  user(condition: UserInput!): UserType
}

input RemovePersonaInput {
  uuid: String!
  personaUUID: String!
}

input SpotInput {
  uuid: String
  name: String
  url: String
}

type SpotType {
  uuid: String!
  name: String!
  description: String!
  logo: String
  image: String
  url: String
  details: JSONObject
  personaUUIDs: [String!]
}

input UpdatePersonaInput {
  card: CardInput
  page: PageInput
}

input UpdateSpotInput {
  name: String
  description: String
  logo: String
  image: String
  url: String
  details: JSONObject
}

input UpdateUserInput {
  name: String
  email: String
  photo: String
}

input UserInput {
  uuid: String
  name: String
  url: String
}

type UserLoginType {
  accessToken: String!
  user: UserType!
}

type UserType {
  uuid: String!
  name: String!
  email: String!
  photo: String
  personaUUIDs: [String!]
  defaultPersona: String
}
