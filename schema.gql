# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ConnectPersonaToSpotInput {
  uuid: String!
  personaUuid: String!
}

input CreateSpotInput {
  name: String!
  description: String!
  logo: String
  image: String
  url: String = ""
  details: JSONObject
}

input CreateUserInput {
  uuid: String!
  name: String!
  email: String
  photo: String
}

type Example {
  qrCodeDataUri: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Mutation {
  loginUser(idToken: String!): UserLoginType!
  logoutUser(uid: String!): String!
  createUser(user: CreateUserInput!): UserType!
  updateUser(uuid: String!, user: UpdateUserInput!): UserType!
  removeUser(condition: UserInput!): Float!
  createSpot(spot: CreateSpotInput!): SpotType!
  updateSpot(uuid: String!, spot: UpdateSpotInput!): SpotType!
  removeSpot(condition: SpotInput!): Float!
  connectPersona(input: ConnectPersonaToSpotInput!): SpotType!
}

type Query {
  getUser(condition: UserInput!): [UserType!]!
  getExample(id: String!): Example!
  getSpot(condition: SpotInput!): [SpotType!]!
  getSpots: [SpotType!]!
}

input SpotInput {
  uuid: String
  name: String
  url: String
}

type SpotType {
  uuid: String!
  name: String!
  description: String!
  logo: String
  image: String
  url: String
  details: JSONObject
  personaUUIDs: [String!]
}

input UpdateSpotInput {
  name: String
  description: String
  logo: String
  image: String
  url: String
  details: JSONObject
}

input UpdateUserInput {
  name: String
  email: String
  photo: String
}

input UserInput {
  uuid: String
  name: String
  url: String
}

type UserLoginType {
  accessToken: String!
}

type UserType {
  uuid: String!
  name: String!
  email: String
  photo: String
  personaUUIDs: [String!]
}
